.TH SSH-KEYGEN 1 "March 5 2019 " ""
.SH NAME
\fBssh-keygen\fP
\- authentication key generation, management and conversion
.SH SYNOPSIS
.br
\fBssh-keygen\fP
[\fB\-q\fP]
[\fB\-b\fP \fIbits\fP]
[\fB\-t\fP \fBdsa\fP | ecdsa | ed25519 | rsa]
[\fB\-N\fP \fInew_passphrase\fP]
[\fB\-C\fP \fIcomment\fP]
[\fB\-f\fP \fIoutput_keyfile\fP]
[\fB\-m\fP \fIformat\fP]
.br
\fBssh-keygen\fP
\fB\-p\fP
[\fB\-P\fP \fIold_passphrase\fP]
[\fB\-N\fP \fInew_passphrase\fP]
[\fB\-f\fP \fIkeyfile\fP]
[\fB\-m\fP \fIformat\fP]
.br
\fBssh-keygen\fP
\fB\-i\fP
[\fB\-m\fP \fIkey_format\fP]
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-e\fP
[\fB\-m\fP \fIkey_format\fP]
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-y\fP
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-c\fP
[\fB\-P\fP \fIpassphrase\fP]
[\fB\-C\fP \fIcomment\fP]
[\fB\-f\fP \fIkeyfile\fP]
.br
\fBssh-keygen\fP
\fB\-l\fP
[\fB\-v\fP]
[\fB\-E\fP \fIfingerprint_hash\fP]
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-B\fP
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-D\fP \fIpkcs11\fP
.br
\fBssh-keygen\fP
\fB\-F\fP \fIhostname\fP
[\fB\-f\fP \fIknown_hosts_file\fP]
[\fB\-l\fP]
.br
\fBssh-keygen\fP
\fB\-H\fP
[\fB\-f\fP \fIknown_hosts_file\fP]
.br
\fBssh-keygen\fP
\fB\-R\fP \fIhostname\fP
[\fB\-f\fP \fIknown_hosts_file\fP]
.br
\fBssh-keygen\fP
\fB\-r\fP \fIhostname\fP
[\fB\-f\fP \fIinput_keyfile\fP]
[\fB\-g\fP]
.br
\fBssh-keygen\fP
\fB\-G\fP \fIoutput_file\fP
[\fB\-v\fP]
[\fB\-b\fP \fIbits\fP]
[\fB\-M\fP \fImemory\fP]
[\fB\-S\fP \fIstart_point\fP]
.br
\fBssh-keygen\fP
\fB\-T\fP \fIoutput_file\fP
\fB\-f\fP \fIinput_file\fP
[\fB\-v\fP]
[\fB\-a\fP \fIrounds\fP]
[\fB\-J\fP \fInum_lines\fP]
[\fB\-j\fP \fIstart_line\fP]
[\fB\-K\fP \fIcheckpt\fP]
[\fB\-W\fP \fIgenerator\fP]
.br
\fBssh-keygen\fP
\fB\-s\fP \fIca_key\fP
\fB\-I\fP \fIcertificate_identity\fP
[\fB\-h\fP]
[\fB\-U\fP]
[\fB\-D\fP \fIpkcs11_provider\fP]
[\fB\-n\fP \fIprincipals\fP]
[\fB\-O\fP \fIoption\fP]
[\fB\-V\fP \fIvalidity_interval\fP]
[\fB\-z\fP \fIserial_number\fP]
\fIfile ...\fP
.br
\fBssh-keygen\fP
\fB\-L\fP
[\fB\-f\fP \fIinput_keyfile\fP]
.br
\fBssh-keygen\fP
\fB\-A\fP
[\fB\-f\fP \fIprefix_path\fP]
.br
\fBssh-keygen\fP
\fB\-k\fP
\fB\-f\fP \fIkrl_file\fP
[\fB\-u\fP]
[\fB\-s\fP \fIca_public\fP]
[\fB\-z\fP \fIversion_number\fP]
\fIfile ...\fP
.br
\fBssh-keygen\fP
\fB\-Q\fP
\fB\-f\fP \fIkrl_file\fP
\fIfile ...\fP
.SH DESCRIPTION
\fBssh-keygen\fP
generates, manages and converts authentication keys for
\fBssh\fP(1).
\fBssh-keygen\fP
can create keys for use by SSH protocol version 2.

The type of key to be generated is specified with the
\fB\-t\fP
option.
If invoked without any arguments,
\fBssh-keygen\fP
will generate an RSA key.

\fBssh-keygen\fP
is also used to generate groups for use in Diffie-Hellman group
exchange (DH-GEX).
See the
.B MODULI GENERATION
section for details.

Finally,
\fBssh-keygen\fP
can be used to generate and update Key Revocation Lists, and to test whether
given keys have been revoked by one.
See the
.B KEY REVOCATION LISTS
section for details.

Normally each user wishing to use SSH
with public key authentication runs this once to create the authentication
key in
\fI~/.ssh/id_dsa\fP,
\fI~/.ssh/id_ecdsa\fP,
\fI~/.ssh/id_ed25519\fP
or
\fI~/.ssh/id_rsa\fP.
Additionally, the system administrator may use this to generate host keys,
as seen in
\fI/etc/rc\fP.

Normally this program generates the key and asks for a file in which
to store the private key.
The public key is stored in a file with the same name but
``.pub''
appended.
The program also asks for a passphrase.
The passphrase may be empty to indicate no passphrase
(host keys must have an empty passphrase), or it may be a string of
arbitrary length.
A passphrase is similar to a password, except it can be a phrase with a
series of words, punctuation, numbers, whitespace, or any string of
characters you want.
Good passphrases are 10-30 characters long, are
not simple sentences or otherwise easily guessable (English
prose has only 1-2 bits of entropy per character, and provides very bad
passphrases), and contain a mix of upper and lowercase letters,
numbers, and non-alphanumeric characters.
The passphrase can be changed later by using the
\fB\-p\fP
option.

There is no way to recover a lost passphrase.
If the passphrase is lost or forgotten, a new key must be generated
and the corresponding public key copied to other machines.

\fBssh-keygen\fP
will by default write keys in an OpenSSH-specific format.
This format is preferred as it offers better protection for
keys at rest as well as allowing storage of key comments within
the private key file itself.
The key comment may be useful to help identify the key.
The comment is initialized to
``user@host''
when the key is created, but can be changed using the
\fB\-c\fP
option.

It is still possible for
\fBssh-keygen\fP
to write the previously-used PEM format private keys using the
\fB\-m\fP
flag.
This may be used when generating new keys, and existing new-format
keys may be converted using this option in conjunction with the
\fB\-p\fP
(change passphrase) flag.

After a key is generated, instructions below detail where the keys
should be placed to be activated.

The options are as follows:
.TP
\fB\-A\fP
For each of the key types (rsa, dsa, ecdsa and ed25519)
for which host keys
do not exist, generate the host keys with the default key file path,
an empty passphrase, default bits for the key type, and default comment.
If
\fB\-f\fP
has also been specified, its argument is used as a prefix to the
default path for the resulting host key files.
This is used by
\fI/etc/rc\fP
to generate new host keys.
.TP
\fB\-a\fP \fIrounds\fP
When saving a private key this option specifies the number of KDF
(key derivation function) rounds used.
Higher numbers result in slower passphrase verification and increased
resistance to brute-force password cracking (should the keys be stolen).

When screening DH-GEX candidates (using the
\fB\-T\fP
command).
This option specifies the number of primality tests to perform.
.TP
\fB\-B\fP
Show the bubblebabble digest of specified private or public key file.
.TP
\fB\-b\fP \fIbits\fP
Specifies the number of bits in the key to create.
For RSA keys, the minimum size is 1024 bits and the default is 2048 bits.
Generally, 2048 bits is considered sufficient.
DSA keys must be exactly 1024 bits as specified by FIPS 186-2.
For ECDSA keys, the
\fB\-b\fP
flag determines the key length by selecting from one of three elliptic
curve sizes: 256, 384 or 521 bits.
Attempting to use bit lengths other than these three values for ECDSA keys
will fail.
Ed25519 keys have a fixed length and the
\fB\-b\fP
flag will be ignored.
.TP
\fB\-C\fP \fIcomment\fP
Provides a new comment.
.TP
\fB\-c\fP
Requests changing the comment in the private and public key files.
The program will prompt for the file containing the private keys, for
the passphrase if the key has one, and for the new comment.
.TP
\fB\-D\fP \fIpkcs11\fP
Download the public keys provided by the PKCS#11 shared library
\fIpkcs11\fP.
When used in combination with
\fB\-s\fP,
this option indicates that a CA key resides in a PKCS#11 token (see the
.B CERTIFICATES
section for details).
.TP
\fB\-E\fP \fIfingerprint_hash\fP
Specifies the hash algorithm used when displaying key fingerprints.
Valid options are:
``md5''
and
``sha256''.
The default is
``sha256''.
.TP
\fB\-e\fP
This option will read a private or public OpenSSH key file and
print to stdout a public key in one of the formats specified by the
\fB\-m\fP
option.
The default export format is
``RFC4716''.
This option allows exporting OpenSSH keys for use by other programs, including
several commercial SSH implementations.
.TP
\fB\-F\fP \fIhostname\fP | \fI[hostname]:port\fP
Search for the specified
\fIhostname\fP
(with optional port number)
in a
\fIknown_hosts\fP
file, listing any occurrences found.
This option is useful to find hashed host names or addresses and may also be
used in conjunction with the
\fB\-H\fP
option to print found keys in a hashed format.
.TP
\fB\-f\fP \fIfilename\fP
Specifies the filename of the key file.
.TP
\fB\-G\fP \fIoutput_file\fP
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
\fB\-T\fP
option) before use.
.TP
\fB\-g\fP
Use generic DNS format when printing fingerprint resource records using the
\fB\-r\fP
command.
.TP
\fB\-H\fP
Hash a
\fIknown_hosts\fP
file.
This replaces all hostnames and addresses with hashed representations
within the specified file; the original content is moved to a file with
a .old suffix.
These hashes may be used normally by
\fBssh\fP
and
\fBsshd\fP,
but they do not reveal identifying information should the file's contents
be disclosed.
This option will not modify existing hashed hostnames and is therefore safe
to use on files that mix hashed and non-hashed names.
.TP
\fB\-h\fP
When signing a key, create a host certificate instead of a user
certificate.
Please see the
.B CERTIFICATES
section for details.
.TP
\fB\-I\fP \fIcertificate_identity\fP
Specify the key identity when signing a public key.
Please see the
.B CERTIFICATES
section for details.
.TP
\fB\-i\fP
This option will read an unencrypted private (or public) key file
in the format specified by the
\fB\-m\fP
option and print an OpenSSH compatible private
(or public) key to stdout.
This option allows importing keys from other software, including several
commercial SSH implementations.
The default import format is
``RFC4716''.
.TP
\fB\-J\fP \fInum_lines\fP
Exit after screening the specified number of lines
while performing DH candidate screening using the
\fB\-T\fP
option.
.TP
\fB\-j\fP \fIstart_line\fP
Start screening at the specified line number
while performing DH candidate screening using the
\fB\-T\fP
option.
.TP
\fB\-K\fP \fIcheckpt\fP
Write the last line processed to the file
\fIcheckpt\fP
while performing DH candidate screening using the
\fB\-T\fP
option.
This will be used to skip lines in the input file that have already been
processed if the job is restarted.
.TP
\fB\-k\fP
Generate a KRL file.
In this mode,
\fBssh-keygen\fP
will generate a KRL file at the location specified via the
\fB\-f\fP
flag that revokes every key or certificate presented on the command line.
Keys/certificates to be revoked may be specified by public key file or
using the format described in the
.B KEY REVOCATION LISTS
section.
.TP
\fB\-L\fP
Prints the contents of one or more certificates.
.TP
\fB\-l\fP
Show fingerprint of specified public key file.
For RSA and DSA keys
\fBssh-keygen\fP
tries to find the matching public key file and prints its fingerprint.
If combined with
\fB\-v\fP,
a visual ASCII art representation of the key is supplied with the
fingerprint.
.TP
\fB\-M\fP \fImemory\fP
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
.TP
\fB\-m\fP \fIkey_format\fP
Specify a key format for key generation, the
\fB\-i\fP
(import),
\fB\-e\fP
(export) conversion options, and the
\fB\-p\fP
change passphrase operation.
The latter may be used to convert between OpenSSH private key and PEM
private key formats.
The supported key formats are:
``RFC4716''
(RFC 4716/SSH2 public or private key),
``PKCS8''
(PEM PKCS8 public key)
or
``PEM''
(PEM public key).
The default conversion format is
``RFC4716''.
Setting a format of
``PEM''
when generating or updating a supported private key type will cause the
key to be stored in the legacy PEM private key format.
.TP
\fB\-N\fP \fInew_passphrase\fP
Provides the new passphrase.
.TP
\fB\-n\fP \fIprincipals\fP
Specify one or more principals (user or host names) to be included in
a certificate when signing a key.
Multiple principals may be specified, separated by commas.
Please see the
.B CERTIFICATES
section for details.
.TP
\fB\-O\fP \fIoption\fP
Specify a certificate option when signing a key.
This option may be specified multiple times.
See also the
.B CERTIFICATES
section for further details.

At present, no standard options are valid for host keys.
The options that are valid for user certificates are:

.TP
\fBclear\fP
Clear all enabled permissions.
This is useful for clearing the default set of permissions so permissions may
be added individually.

.TP
\fBcritical : Ns \fIname\fP Ns [Ns = Ns \fIcontents]\fP\fP
.TP
\fBextension : Ns \fIname\fP Ns [Ns = Ns \fIcontents]\fP\fP
Includes an arbitrary certificate critical option or extension.
The specified
\fIname\fP
should include a domain suffix, e.g.\&
``name@example.com''.
If
\fIcontents\fP
is specified then it is included as the contents of the extension/option
encoded as a string, otherwise the extension/option is created with no
contents (usually indicating a flag).
Extensions may be ignored by a client or server that does not recognise them,
whereas unknown critical options will cause the certificate to be refused.

.TP
\fBforce-command Ns = Ns \fIcommand\fP\fP
Forces the execution of
\fIcommand\fP
instead of any shell or command specified by the user when
the certificate is used for authentication.

.TP
\fBno-agent-forwarding\fP
Disable
\fBssh-agent\fP(1)
forwarding (permitted by default).

.TP
\fBno-port-forwarding\fP
Disable port forwarding (permitted by default).

.TP
\fBno-pty\fP
Disable PTY allocation (permitted by default).

.TP
\fBno-user-rc\fP
Disable execution of
\fI~/.ssh/rc\fP
by
\fBsshd\fP(8)
(permitted by default).

.TP
\fBno-x11-forwarding\fP
Disable X11 forwarding (permitted by default).

.TP
\fBpermit-agent-forwarding\fP
Allows
\fBssh-agent\fP(1)
forwarding.

.TP
\fBpermit-port-forwarding\fP
Allows port forwarding.

.TP
\fBpermit-pty\fP
Allows PTY allocation.

.TP
\fBpermit-user-rc\fP
Allows execution of
\fI~/.ssh/rc\fP
by
\fBsshd\fP(8).

.TP
\fBpermit-X11-forwarding\fP
Allows X11 forwarding.

.TP
\fBsource-address Ns = Ns \fIaddress_list\fP\fP
Restrict the source addresses from which the certificate is considered valid.
The
\fIaddress_list\fP
is a comma-separated list of one or more address/netmask pairs in CIDR
format.
.TP
\fB\-P\fP \fIpassphrase\fP
Provides the (old) passphrase.
.TP
\fB\-p\fP
Requests changing the passphrase of a private key file instead of
creating a new private key.
The program will prompt for the file
containing the private key, for the old passphrase, and twice for the
new passphrase.
.TP
\fB\-Q\fP
Test whether keys have been revoked in a KRL.
.TP
\fB\-q\fP
Silence
\fBssh-keygen\fP.
.TP
\fB\-R\fP \fIhostname\fP | \fI[hostname]:port\fP
Removes all keys belonging to the specified
\fIhostname\fP
(with optional port number)
from a
\fIknown_hosts\fP
file.
This option is useful to delete hashed hosts (see the
\fB\-H\fP
option above).
.TP
\fB\-r\fP \fIhostname\fP
Print the SSHFP fingerprint resource record named
\fIhostname\fP
for the specified public key file.
.TP
\fB\-S\fP \fIstart\fP
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.TP
\fB\-s\fP \fIca_key\fP
Certify (sign) a public key using the specified CA key.
Please see the
.B CERTIFICATES
section for details.

When generating a KRL,
\fB\-s\fP
specifies a path to a CA public key file used to revoke certificates directly
by key ID or serial number.
See the
.B KEY REVOCATION LISTS
section for details.
.TP
\fB\-T\fP \fIoutput_file\fP
Test DH group exchange candidate primes (generated using the
\fB\-G\fP
option) for safety.
.TP
\fB\-t\fP \fBdsa\fP | ecdsa | ed25519 | rsa
Specifies the type of key to create.
The possible values are
``dsa'',
``ecdsa'',
``ed25519'',
or
``rsa''.
.TP
\fB\-U\fP
When used in combination with
\fB\-s\fP,
this option indicates that a CA key resides in a
\fBssh-agent\fP(1).
See the
.B CERTIFICATES
section for more information.
.TP
\fB\-u\fP
Update a KRL.
When specified with
\fB\-k\fP,
keys listed via the command line are added to the existing KRL rather than
a new KRL being created.
.TP
\fB\-V\fP \fIvalidity_interval\fP
Specify a validity interval when signing a certificate.
A validity interval may consist of a single time, indicating that the
certificate is valid beginning now and expiring at that time, or may consist
of two times separated by a colon to indicate an explicit time interval.

The start time may be specified as the string
``always''
to indicate the certificate has no specified start time,
a date in YYYYMMDD format, a time in YYYYMMDDHHMM[SS] format,
a relative time (to the current time) consisting of a minus sign followed by
an interval in the format described in the
TIME FORMATS section of
\fBsshd_config\fP(5).

The end time may be specified as a YYYYMMDD date, a YYYYMMDDHHMM[SS] time,
a relative time starting with a plus character or the string
``forever''
to indicate that the certificate has no expirty date.

For example:
``+52w1d''
(valid from now to 52 weeks and one day from now),
``-4w:+4w''
(valid from four weeks ago to four weeks from now),
``20100101123000:20110101123000''
(valid from 12:30 PM, January 1st, 2010 to 12:30 PM, January 1st, 2011),
``-1d:20110101''
(valid from yesterday to midnight, January 1st, 2011).
``-1m:forever''
(valid from one minute ago and never expiring).
.TP
\fB\-v\fP
Verbose mode.
Causes
\fBssh-keygen\fP
to print debugging messages about its progress.
This is helpful for debugging moduli generation.
Multiple
\fB\-v\fP
options increase the verbosity.
The maximum is 3.
.TP
\fB\-W\fP \fIgenerator\fP
Specify desired generator when testing candidate moduli for DH-GEX.
.TP
\fB\-y\fP
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
.TP
\fB\-z\fP \fIserial_number\fP
Specifies a serial number to be embedded in the certificate to distinguish
this certificate from others from the same CA.
If the
\fIserial_number\fP
is prefixed with a
`+'
character, then the serial number will be incremented for each certificate
signed on a single command-line.
The default serial number is zero.

When generating a KRL, the
\fB\-z\fP
flag is used to specify a KRL version number.
.SH MODULI GENERATION
\fBssh-keygen\fP
may be used to generate groups for the Diffie-Hellman Group Exchange
(DH-GEX) protocol.
Generating these groups is a two-step process: first, candidate
primes are generated using a fast, but memory intensive process.
These candidate primes are then tested for suitability (a CPU-intensive
process).

Generation of primes is performed using the
\fB\-G\fP
option.
The desired length of the primes may be specified by the
\fB\-b\fP
option.
For example:

Dl # ssh-keygen -G moduli-2048.candidates -b 2048

By default, the search for primes begins at a random point in the
desired length range.
This may be overridden using the
\fB\-S\fP
option, which specifies a different start point (in hex).

Once a set of candidates have been generated, they must be screened for
suitability.
This may be performed using the
\fB\-T\fP
option.
In this mode
\fBssh-keygen\fP
will read candidates from standard input (or a file specified using the
\fB\-f\fP
option).
For example:

Dl # ssh-keygen -T moduli-2048 -f moduli-2048.candidates

By default, each candidate will be subjected to 100 primality tests.
This may be overridden using the
\fB\-a\fP
option.
The DH generator value will be chosen automatically for the
prime under consideration.
If a specific generator is desired, it may be requested using the
\fB\-W\fP
option.
Valid generator values are 2, 3, and 5.

Screened DH groups may be installed in
\fI/data/data/com.termux/files/usr/data/data/com.termux/files/usr/etc/ssh/moduli\fP.
It is important that this file contains moduli of a range of bit lengths and
that both ends of a connection share common moduli.
.SH CERTIFICATES
\fBssh-keygen\fP
supports signing of keys to produce certificates that may be used for
user or host authentication.
Certificates consist of a public key, some identity information, zero or
more principal (user or host) names and a set of options that
are signed by a Certification Authority (CA) key.
Clients or servers may then trust only the CA key and verify its signature
on a certificate rather than trusting many user/host keys.
Note that OpenSSH certificates are a different, and much simpler, format to
the X.509 certificates used in
\fBssl\fP(8).

\fBssh-keygen\fP
supports two types of certificates: user and host.
User certificates authenticate users to servers, whereas host certificates
authenticate server hosts to users.
To generate a user certificate:

Dl $ ssh-keygen -s /path/to/ca_key -I key_id /path/to/user_key.pub

The resultant certificate will be placed in
\fI/path/to/user_key-cert.pub\fP.
A host certificate requires the
\fB\-h\fP
option:

Dl $ ssh-keygen -s /path/to/ca_key -I key_id -h /path/to/host_key.pub

The host certificate will be output to
\fI/path/to/host_key-cert.pub\fP.

It is possible to sign using a CA key stored in a PKCS#11 token by
providing the token library using
\fB\-D\fP
and identifying the CA key by providing its public half as an argument
to
\fB\-s\fP :

Dl $ ssh-keygen -s ca_key.pub -D libpkcs11.so -I key_id user_key.pub

Similarly, it is possible for the CA key to be hosted in a
\fBssh-agent\fP(1).
This is indicated by the
\fB\-U\fP
flag and, again, the CA key must be identified by its public half.

Dl $ ssh-keygen -Us ca_key.pub -I key_id user_key.pub

In all cases,
\fIkey_id\fP
is a "key identifier" that is logged by the server when the certificate
is used for authentication.

Certificates may be limited to be valid for a set of principal (user/host)
names.
By default, generated certificates are valid for all users or hosts.
To generate a certificate for a specified set of principals:

Dl $ ssh-keygen -s ca_key -I key_id -n user1,user2 user_key.pub
Dl "$ ssh-keygen -s ca_key -I key_id -h -n host.domain host_key.pub"

Additional limitations on the validity and use of user certificates may
be specified through certificate options.
A certificate option may disable features of the SSH session, may be
valid only when presented from particular source addresses or may
force the use of a specific command.
For a list of valid certificate options, see the documentation for the
\fB\-O\fP
option above.

Finally, certificates may be defined with a validity lifetime.
The
\fB\-V\fP
option allows specification of certificate start and end times.
A certificate that is presented at a time outside this range will not be
considered valid.
By default, certificates are valid from
UNIX
Epoch to the distant future.

For certificates to be used for user or host authentication, the CA
public key must be trusted by
\fBsshd\fP(8)
or
\fBssh\fP(1).
Please refer to those manual pages for details.
.SH KEY REVOCATION LISTS
\fBssh-keygen\fP
is able to manage OpenSSH format Key Revocation Lists (KRLs).
These binary files specify keys or certificates to be revoked using a
compact format, taking as little as one bit per certificate if they are being
revoked by serial number.

KRLs may be generated using the
\fB\-k\fP
flag.
This option reads one or more files from the command line and generates a new
KRL.
The files may either contain a KRL specification (see below) or public keys,
listed one per line.
Plain public keys are revoked by listing their hash or contents in the KRL and
certificates revoked by serial number or key ID (if the serial is zero or
not available).

Revoking keys using a KRL specification offers explicit control over the
types of record used to revoke keys and may be used to directly revoke
certificates by serial number or key ID without having the complete original
certificate on hand.
A KRL specification consists of lines containing one of the following directives
followed by a colon and some directive-specific information.
.TP
\fBserial\fP: \fIserial_number\fP[-\fIserial_number\fP]
Revokes a certificate with the specified serial number.
Serial numbers are 64-bit values, not including zero and may be expressed
in decimal, hex or octal.
If two serial numbers are specified separated by a hyphen, then the range
of serial numbers including and between each is revoked.
The CA key must have been specified on the
\fBssh-keygen\fP
command line using the
\fB\-s\fP
option.
.TP
\fBid\fP: \fIkey_id\fP
Revokes a certificate with the specified key ID string.
The CA key must have been specified on the
\fBssh-keygen\fP
command line using the
\fB\-s\fP
option.
.TP
\fBkey\fP: \fIpublic_key\fP
Revokes the specified key.
If a certificate is listed, then it is revoked as a plain public key.
.TP
\fBsha1\fP: \fIpublic_key\fP
Revokes the specified key by including its SHA1 hash in the KRL.
.TP
\fBsha256\fP: \fIpublic_key\fP
Revokes the specified key by including its SHA256 hash in the KRL.
KRLs that revoke keys by SHA256 hash are not supported by OpenSSH versions
prior to 7.9.
.TP
\fBhash\fP: \fIfingerprint\fP
Revokes a key using a fingerprint hash, as obtained from a
\fBsshd\fP(8)
authentication log message or the
\fBssh-keygen\fP
\fB\-l\fP
flag.
Only SHA256 fingerprints are supported here and resultant KRLs are
not supported by OpenSSH versions prior to 7.9.

KRLs may be updated using the
\fB\-u\fP
flag in addition to
\fB\-k\fP.
When this option is specified, keys listed via the command line are merged into
the KRL, adding to those already there.

It is also possible, given a KRL, to test whether it revokes a particular key
(or keys).
The
\fB\-Q\fP
flag will query an existing KRL, testing each key specified on the command line.
If any key listed on the command line has been revoked (or an error encountered)
then
\fBssh-keygen\fP
will exit with a non-zero exit status.
A zero exit status will only be returned if no key was revoked.
.SH FILES
.TP
.B ~/.ssh/id_dsa
.TP
.B ~/.ssh/id_ecdsa
.TP
.B ~/.ssh/id_ed25519
.TP
.B ~/.ssh/id_rsa
Contains the DSA, ECDSA, Ed25519 or RSA
authentication identity of the user.
This file should not be readable by anyone but the user.
It is possible to
specify a passphrase when generating the key; that passphrase will be
used to encrypt the private part of this file using 128-bit AES.
This file is not automatically accessed by
\fBssh-keygen\fP
but it is offered as the default file for the private key.
\fBssh\fP(1)
will read this file when a login attempt is made.

.TP
.B ~/.ssh/id_dsa.pub
.TP
.B ~/.ssh/id_ecdsa.pub
.TP
.B ~/.ssh/id_ed25519.pub
.TP
.B ~/.ssh/id_rsa.pub
Contains the DSA, ECDSA, Ed25519 or RSA
public key for authentication.
The contents of this file should be added to
\fI~/.ssh/authorized_keys\fP
on all machines
where the user wishes to log in using public key authentication.
There is no need to keep the contents of this file secret.

.TP
.B /data/data/com.termux/files/usr/data/data/com.termux/files/usr/etc/ssh/moduli
Contains Diffie-Hellman groups used for DH-GEX.
The file format is described in
\fBmoduli\fP(5).
.SH SEE ALSO
\fBssh\fP(1),
\fBssh-add\fP(1),
\fBssh-agent\fP(1),
\fBmoduli\fP(5),
\fBsshd\fP(8)

\fIThe Secure Shell (SSH) Public Key File Format\fP, RFC 4716, 2006.
.SH AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
